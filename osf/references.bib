
@article{Baldwin2006,
  title = {The {{Architecture}} of {{Participation}}: {{Does Code Architecture Mitigate Free Riding}} in the {{Open Source Development Model}}?},
  author = {Baldwin, Carliss Y. and Clark, Kim B.},
  year = {2006},
  journal = {Management Science},
  volume = {52},
  number = {7},
  pages = {1116--1127},
  doi = {10.1287/mnsc.1060.0546},
  abstract = {This paper argues that the architecture of a codebase is a critical factor that lies at the heart of the open source development process. We define two observable properties of an architecture: (1) modularity and (2) option value. Developers can often make informed judgments about modularity and option value from early, partially implemented code releases. We show that codebases that are more modular or have more option value (1) increase developers' incentives to join and remain involved in an open source development effort and (2) decrease the amount of free riding in equilibrium. These effects occur because modularity and option value create opportunities for the exchange of valuable work among developers, opportunities that do not exist in codebases that are not modular or have no option value.}
}

@inproceedings{Bogart2016,
  title = {How to Break an {{API}}: Cost Negotiation and Community Values in Three Software Ecosystems},
  booktitle = {Proceedings of the 24th {{ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}}},
  author = {Bogart, Christopher and K{\"a}stner, Christian and Herbsleb, James and Thung, Ferdian},
  year = {2016},
  pages = {109--120},
  address = {{Seattle, WA, USA}},
  doi = {10.1145/2950290.2950325}
}

@article{Butler2001,
  title = {Membership {{Size}}, {{Communication Activity}}, and {{Sustainability}}: {{A Resource-Based Model}} of {{Online Social Structures}}},
  author = {Butler, Brian S.},
  year = {2001},
  journal = {Information Systems Research},
  volume = {12},
  number = {4},
  pages = {346--362},
  doi = {10.1287/isre.12.4.346.9703},
  abstract = {As telecommunication networks become more common, there is an increasing interest in the factors underlying the development of online social structures. It has been proposed that these structures are new forms of organizing which are not subject to the same constraints as traditional social structures. However, from anecdotal evidence and case studies it is difficult to evaluate whether online social structures are subject to the same problems as traditional social structures. Drawing from prior studies of traditional social structures and empirical analyses of longitudinal data from a sample of Internet-based groups, this exploratory work considers the role of size and communication activity in sustainable online social structures. A resource-based theory of sustainable social structures is presented. Members contribute time, energy, and other resources, enabling a social structure to provide benefits for individuals. These benefits, which include information, influence, and social support, are the basis for a social structure's ability to attract and retain members. This model focuses on the system of opposing forces that link membership size as a component of resource availability and communication activity as an aspect of benefit provision to the sustainability of an online social structure. Analyses of data from a random sample of e-mail-based Internet social structures (listservs) indicate that communication activity and size have both positive and negative effects on a structure's sustainability. These results suggest that while the use of networked communication technologies may alter the form of communication, balancing the opposing impacts of membership size and communication activity in order to maintain resource availability and provide benefits for current members remains a fundamental problem underlying the development of sustainable online social structures.}
}

@article{Chengalur-Smith2010,
  title = {Sustainability of {{Free}}/{{Libre Open Source Projects}}: {{A Longitudinal Study}}},
  author = {{Chengalur-Smith}, Indushobha and Sidorova, Anna and Daniel, Sherae},
  year = {2010},
  journal = {Journal of the Association for Information Systems},
  volume = {11},
  number = {11},
  pages = {657--683},
  doi = {10.17705/1jais.00244},
  abstract = {This paper examines the factors that influence the long-term sustainability of FLOSS projects. A model of project sustainability based on organizational ecology is developed and tested empirically. Data about activity and contribution patterns over the course of five years for 2,772 projects registered with SourceForge is analyzed. Our results suggest that the size of the project's development base, project age and the size of niche occupied by the project are positively related to the project's ability to attract user and/or developer resources. The ability to attract resources is an indicator of the perceived project legitimacy, which in turn is a strong predictor of the project's future sustainability. Thus a project's ability to attract developer and user resources is shown to play a mediating role between the demographic (size and age) and ecological (niche) characteristics of the project and its future sustainability. Our results support the applicability of tenets of organizational ecology related to the liability of smallness, the liability of newness, and population characteristics (niche size) to the FLOSS development environment. The implications of the results for future research and practice are discussed.}
}

@article{Conaldi2012,
  title = {Dynamic {{Models}} of {{Affiliation}} and the {{Network Structure}} of {{Problem Solving}} in an {{Open Source Software Project}}},
  author = {Conaldi, Guido and Lomi, Alessandro and Tonellato, Marco},
  year = {2012},
  journal = {Organizational Research Methods},
  volume = {15},
  number = {3},
  pages = {385--412},
  doi = {10.1177/1094428111430541},
  abstract = {Two-mode networks are used to describe dual patterns of association between distinct social entities through their joint involvement in categories, activities, issues, and events. In empirical organizational research, the analysis of two-mode networks is typically accomplished either by (a) decomposition of the dual structure into its two unimodal components defined in terms of indirect relations between entities of the same kind or (b) direct statistical analysis of individual two-mode dyads. Both strategies are useful, but neither is fully satisfactory. In this article, the authors introduce newly developed stochastic actor-based models for two-mode networks that may be adopted to redress the limitations of current analytical strategies. The authors specify and estimate the model in the context of data they have collected on the dual association between software developers and software problems observed during a complete release cycle of an open source software project. The authors discuss the general methodological implications of the models for organizational research based on the empirical analysis of two-mode networks.}
}

@book{Cornwell2015,
  title = {Social {{Sequence Analysis}}: {{Methods}} and {{Applications}}},
  author = {Cornwell, Benjamin},
  year = {2015},
  series = {Structural {{Analysis}} in the {{Social Sciences}}},
  number = {37},
  publisher = {{Cambridge University Press}},
  address = {{New York, NY}},
  isbn = {978-1-107-50054-9}
}

@article{Cox2019a,
  title = {Surviving {{Software Dependencies}}},
  author = {Cox, Russ},
  year = {2019},
  journal = {Communications of the ACM},
  volume = {62},
  number = {9},
  pages = {36--43},
  doi = {10.1145/3347446},
  abstract = {Software reuse is finally here but comes with risks.}
}

@inproceedings{Crowston2003,
  title = {Defining {{Open Source Software Project Success}}},
  booktitle = {Proceedings of the {{Twenty-Fourth International Conference}} on {{Information Systems}} ({{ICIS}})},
  author = {Crowston, Kevin and Annabi, Hala and Howison, James},
  year = {2003},
  address = {{Seattle, WA, USA}},
  abstract = {Information systems success is one of the most widely used dependent variables in information systems research. In this paper, we identify a range of measures that can be used to assess the success of open source software (OSS) projects. We identify measures based on a review of the literature, a consideration of the OSS development process and an analysis of the opinions of OSS developers. For each measure, we provide examples of how they might be used in a study of OSS development.}
}

@incollection{Crowston2011,
  title = {Lessons from {{Volunteering}} and {{Free}}/{{Libre Open Source Software Development}} for the {{Future}} of {{Work}}},
  booktitle = {Researching the {{Future}} in {{Information Systems}}},
  author = {Crowston, Kevin},
  editor = {Chiasson, Mike and Henfridsson, Ola and Karsten, Helena and DeGross, Janice I.},
  year = {2011},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}},
  volume = {356},
  pages = {215--229},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-21364-9_14},
  abstract = {In this paper, we review research on voluntary organizations to identify key features of and problems in volunteer work and organizations. We then use the example of free/libre open source software (FLOSS) development teams to examine how those features and problems apply in this situation and how they might be affected by the use of information and communications technologies (ICT). We suggest that understanding volunteer organizations can illuminate the changing nature of all knowledge work, paid as well as unpaid.},
  isbn = {978-3-642-21364-9}
}

@article{Decan2019,
  title = {An Empirical Comparison of Dependency Network Evolution in Seven Software Packaging Ecosystems},
  author = {Decan, Alexandre and Mens, Tom and Grosjean, Philippe},
  year = {2019},
  journal = {Empirical Software Engineering},
  volume = {24},
  pages = {381--416},
  doi = {10.1007/s10664-017-9589-y},
  abstract = {Nearly every popular programming language comes with one or more package managers. The software packages distributed by such package managers form large software ecosystems. These packaging ecosystems contain a large number of package releases that are updated regularly and that have many dependencies to other package releases. While packaging ecosystems are extremely useful for their respective communities of developers, they face challenges related to their scale, complexity, and rate of evolution. Typical problems are backward incompatible package updates, and the risk of (transitively) depending on packages that have become obsolete or inactive. This manuscript uses the libraries.io dataset to carry out a quantitative empirical analysis of the similarities and differences between the evolution of package dependency networks for seven packaging ecosystems of varying sizes and ages: Cargo for Rust, CPAN for Perl, CRAN for R, npm for JavaScript, NuGet for the .NET platform, Packagist for PHP, and RubyGems for Ruby. We propose novel metrics to capture the growth, changeability, reusability and fragility of these dependency networks, and use these metrics to analyze and compare their evolution. We observe that the dependency networks tend to grow over time, both in size and in number of package updates, while a minority of packages are responsible for most of the package updates. The majority of packages depend on other packages, but only a small proportion of packages accounts for most of the reverse dependencies. We observe a high proportion of ``fragile'' packages due to a high and increasing number of transitive dependencies. These findings are instrumental for assessing the quality of a package dependency network, and improving it through dependency management tools and imposed policies.}
}

@article{Doreian1992,
  title = {Fixed List versus Snowball Selection of Social Networks},
  author = {Doreian, Patrick and Woodard, Katherine L.},
  year = {1992},
  journal = {Social Science Research},
  volume = {21},
  number = {2},
  pages = {216--233},
  doi = {10.1016/0049-089X(92)90016-A},
  abstract = {Two ways of collecting network data are discussed in the context of interorganizational networks among social service agencies. One method proceeds with a fixed agency list while the other uses a snowball selection procedure. We find that: 1. (i) the agencies included in the two selection procedures differ; 2. (ii) network-based indicators for agencies (such as centrality) differ; 3. (iii) the substantive contents of the included ties differ; and 4. (iv) the structure of the networks differ. The two methods are fundamentally different and cannot be used as surrogates for each other. When data are gathered at multiple points in time, the differences between the methods are more acute. Interagency networks change through time: agencies leave the network while other agencies join. Snowball selection can respond to these changes while fixed list selection does not.}
}

@article{Fang2009,
  title = {Understanding {{Sustained Participation}} in {{Open Source Software Projects}}},
  author = {Fang, Yulin and Neufeld, Derrick},
  year = {2009},
  journal = {Journal of Management Information Systems},
  volume = {25},
  number = {4},
  pages = {9--50},
  doi = {10.2753/MIS0742-1222250401},
  abstract = {Prior research into open source software (OSS) developer participation has emphasized individuals' motivations for joining these volunteer communities, but it has failed to explain why people stay or leave in the long run. Building upon Lave and Wenger's theory of legitimate peripheral participation (LPP), this paper offers a longitudinal investigation of one OSS community in which sustained participation is hypothesized to be associated with the coevolution of two major elements of LPP theory: "situated learning" (the process of acting knowledgeably and purposefully in the world) and "identity construction" (the process of being identified within the community). To test this hypothesis, data were collected from multiple sources, including online public project documents, electronic mail messages, tracker messages, and log files. Results from qualitative analyses revealed that initial conditions to participate did not effectively predict long-term participation, but that situated learning and identity construction behaviors were positively linked to sustained participation. Furthermore, this study reveals that sustained participants distinguished themselves by consistently engaging in situated learning that both made conceptual (advising others) and practical contributions (improving the code). Implications and future research are discussed.}
}

@article{Grewal2006,
  title = {Location, {{Location}}, {{Location}}: {{How Network Embeddedness Affects Project Success}} in {{Open Source Systems}}},
  author = {Grewal, Rajdeep and Lilien, Gary L. and Mallapragada, Girish},
  year = {2006},
  journal = {Management Science},
  volume = {52},
  number = {7},
  pages = {1043--1056},
  doi = {10.1287/mnsc.1060.0550},
  abstract = {The community-based model for software development in open source environments is becoming a viable alternative to traditional firm-based models. To better understand the workings of open source environments, we examine the effects of network embeddedness\textemdash or the nature of the relationship among projects and developers\textemdash on the success of open source projects. We find that considerable heterogeneity exists in the network embeddedness of open source projects and project managers. We use a visual representation of the affiliation network of projects and developers as well as a formal statistical analysis to demonstrate this heterogeneity and to investigate how these structures differ across projects and project managers. Our main results surround the effect of this differential network embeddedness on project success. We find that network embeddedness has strong and significant effects on both technical and commercial success, but that those effects are quite complex. We use latent class regression analysis to show that multiple regimes exist and that some of the effects of network embeddedness are positive under some regimes and negative under others. We use project age and number of page views to provide insights into the direction of the effect of network embeddedness on project success. Our findings show that different aspects of network embeddedness have powerful but subtle effects on project success and suggest that this is a rich environment for further study.}
}

@article{Haefliger2008,
  title = {Code {{Reuse}} in {{Open Source Software}}},
  author = {Haefliger, Stefan and {von Krogh}, Georg and Spaeth, Sebastian},
  year = {2008},
  journal = {Management Science},
  volume = {54},
  number = {1},
  pages = {180--193},
  doi = {10.1287/mnsc.1070.0748},
  abstract = {Code reuse is a form of knowledge reuse in software development that is fundamental to innovation in many fields. However, to date there has been no systematic investigation of code reuse in open source software projects. This study uses quantitative and qualitative data gathered from a sample of six open source software projects to explore two sets of research questions derived from the literature on software reuse in firms and open source software development. We find that code reuse is extensive across the sample and that open source software developers, much like developers in firms, apply tools that lower their search costs for knowledge and code, assess the quality of software components, and have incentives to reuse code. Open source software developers reuse code because they want to integrate functionality quickly, because they want to write preferred code, because they operate under limited resources in terms of time and skills, and because they can mitigate development costs through code reuse.}
}

@article{Hahn2008,
  title = {Emergence of {{New Project Teams}} from {{Open Source Software Developer Networks}}: {{Impact}} of {{Prior Collaboration Ties}}},
  author = {Hahn, Jungpil and Moon, Jae Yun and Zhang, Chen},
  year = {2008},
  journal = {Information Systems Research},
  volume = {19},
  number = {3},
  pages = {369--391},
  doi = {10.1287/isre.1080.0192}
}

@article{Holland1977,
  title = {A Dynamic Model for Social Networks},
  author = {Holland, Paul W. and Leinhardt, Samuel},
  year = {1977},
  journal = {The Journal of Mathematical Sociology},
  volume = {5},
  number = {1},
  pages = {5--20},
  doi = {10.1080/0022250X.1977.9989862},
  abstract = {A continuous-time binary-matrix-valued Markov chain is used to model the process by which social structure effects individual behavior. The model is developed in the context of sociometric networks of interpersonal affect. By viewing the network as a time-dependent stochastic process it is possible to construct transition intensity equations for the probability that choices between group members will change. These equations can contain parameters for structural effects. Empirical estimates of the parameters can be interpreted as measures of structural tendencies. Some elementary processes are described and the application of the model to cross-sectional data is explained in terms of the steady state solution to the process.}
}

@article{Howison2011,
  title = {Validity {{Issues}} in the {{Use}} of {{Social Network Analysis}} with {{Digital Trace Data}}},
  author = {Howison, James and Wiggins, Andrea and Crowston, Kevin},
  year = {2011},
  journal = {Journal of the Association for Information Systems},
  volume = {12},
  number = {12},
  pages = {767--797},
  doi = {10.17705/1jais.00282},
  abstract = {There is an exciting natural match between social network analysis methods and the growth of data sources produced by social interactions via information technologies, from online communities to corporate information systems. Information Systems researchers have not been slow to embrace this combination of method and data. Such systems increasingly provide ``digital trace data'' that provide new research opportunities. Yet digital trace data are substantively different from the survey and interview data for which network analysis measures and interpretations were originally developed. This paper examines 10 validity issues associated with the combination of digital trace data and social network analysis methods, with examples from the IS literature, to provide recommendations for improving the validity of future research.}
}

@article{Hu2012,
  title = {Reputation Management in an Open Source Developer Social Network: {{An}} Empirical Study on Determinants of Positive Evaluations},
  author = {Hu, Daning and Zhao, J. Leon and Cheng, Jiesi},
  year = {2012},
  journal = {Decision Support Systems},
  volume = {53},
  number = {3},
  pages = {526--533},
  doi = {10.1016/j.dss.2012.02.005},
  abstract = {Successful development of open source software (OSS) projects requires a steady supply of self motivated software developers. Thus a large body of OSS studies focuses on studying the developers' participation motivations. One important motivation is an OSS developer's desire to gain good community reputation which is largely based on positive evaluations from his peers. Therefore, to better motivate developers' project participations through their reputation needs, our empirical analysis adopted a social network perspective to study what factors may affect a developer's decision to positively evaluate one other in a large online open source community called Ohloh. The results surprisingly show that a developer's positive evaluation decision does not depend on his evaluatee's level of OSS-related experience, but rather based on 1) his past reputation (i.e. existing number of positive evaluations), 2) their shared affiliations such as mutual acquaintances, as well as 3) their homophily in location (city), nationality, programming language preference, and community status. We then discuss these findings and their implications for inducing more positive evaluations and better reputation management among open source project members. To the best of our knowledge, this paper is the first research that investigates issues of reputation building and relationship management in an open source development context.}
}

@article{Huisman2003,
  title = {Statistical {{Analysis}} of {{Longitudinal Network Data With Changing Composition}}},
  author = {Huisman, Mark and Snijders, Tom A. B.},
  year = {2003},
  journal = {Sociological Methods \& Research},
  volume = {32},
  number = {2},
  pages = {253--287},
  doi = {10.1177/0049124103256096},
  abstract = {Markov chains can be used for the modeling of complex longitudinal network data. One class of probability models to model the evolution of social networks are stochastic actor-oriented models for network change proposed by Snijders. These models are continuous-time Markov chain models that are implemented as simulation models. The authors propose an extension of the simulation algorithm of stochastic actor-oriented models to include networks of changing composition. In empirical research, the composition of networks may change due to actors joining or leaving the network at some point in time. The composition changes are modeled as exogenous events that occur at given time points and are implemented in the simulation algorithm. The estimation of the network effects, as well as the effects of actor and dyadic attributes that influence the evolution of the network, is based on the simulation of Markov chains.}
}

@article{Kalish2020,
  title = {Stochastic {{Actor-Oriented Models}} for the {{Co-Evolution}} of {{Networks}} and {{Behavior}}: {{An Introduction}} and {{Tutorial}}},
  author = {Kalish, Yuval},
  year = {2020},
  journal = {Organizational Research Methods},
  volume = {23},
  number = {3},
  pages = {511--534},
  doi = {10.1177/1094428118825300},
  abstract = {Stochastic actor-oriented (SAO) models are a family of models for network dynamics that enable researchers to test multiple, often competing explanations for network change and estimate the extent and relative power of various influences on network evolution. SAO models for the co-evolution of network ties and actor behavior, the most comprehensive category of SAO models, examine how networks and actor attributes\textemdash their behavior, performance, or attitudes\textemdash influence each other over time. While these models have been widely used in the social sciences, and particularly in educational settings, their use in organizational scholarship has been extremely limited. This paper provides a layperson introduction to SAO models for the co-evolution of networks and behavior and the types of research questions they can address. The models and their underpinnings are explained in nonmathematical terms, and theoretical explanations are supported by a concrete, detailed example that includes step-by-step model building and hypothesis testing, alongside an R script.}
}

@inproceedings{Kikas2017,
  title = {Structure and {{Evolution}} of {{Package Dependency Networks}}},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Kikas, Riivo and Gousios, Georgios and Dumas, Marlon and Pfahl, Dietmar},
  year = {2017},
  address = {{Buenos Aires, Argentina}},
  doi = {10.1109/MSR.2017.55},
  abstract = {Software developers often include available open-source software packages into their projects to minimize redundant effort. However, adding a package to a project can also introduce risks, which can propagate through multiple levels of dependencies. Currently, not much is known about the structure of open-source package ecosystems of popular programming languages and the extent to which transitive bug propagation is possible. This paper analyzes the dependency network structure and evolution of the JavaScript, Ruby, and Rust ecosystems. The reported results reveal significant differences across language ecosystems. The results indicate that the number of transitive dependencies for JavaScript has grown 60\% over the last year, suggesting that developers should look more carefully into their dependencies to understand what exactly is included. The study also reveals that vulnerability to a removal of the most popular package is increasing, yet most other packages have a decreasing impact on vulnerability. The findings of this study can inform the development of dependency management tools.}
}

@article{Koskinen2012,
  title = {Modelling the Evolution of a Bipartite Network\textemdash{{Peer}} Referral in Interlocking Directorates},
  author = {Koskinen, Johan and Edling, Christofer},
  year = {2012},
  journal = {Social Networks},
  volume = {34},
  number = {3},
  pages = {309--322},
  doi = {10.1016/j.socnet.2010.03.001},
  abstract = {A central part of relational ties between social actors is constituted by shared affiliations and events. The action of joint participation reinforces personal ties between social actors as well as mutually shared values and norms that in turn perpetuate the patterns of social action that define groups. Therefore the study of bipartite networks is central to social science. Furthermore, the dynamics of these processes suggests that bipartite networks should not be considered static structures but rather be studied over time. In order to model the evolution of bipartite networks empirically we introduce a class of models and a Bayesian inference scheme that extends previous stochastic actor-oriented models for unimodal graphs. Contemporary research on interlocking directorates provides an area of research in which it seems reasonable to apply the model. Specifically, we address the question of how tie formation, i.e. director recruitment, contributes to the structural properties of the interlocking directorate network. For boards of directors on the Stockholm stock exchange we propose that a prolific mechanism in tie formation is that of peer referral. The results indicate that such a mechanism is present, generating multiple interlocks between boards.}
}

@article{Lerner2002,
  title = {Some {{Simple Economics}} of {{Open Source}}},
  author = {Lerner, Josh and Tirole, Jean},
  year = {2002},
  journal = {The Journal of Industrial Economics},
  volume = {50},
  number = {2},
  pages = {197--234},
  doi = {10.1111/1467-6451.00174},
  abstract = {There has been a recent surge of interest in open source software development, which involves developers at many different locations and organizations sharing code to develop and refine programs. To an economist, the behavior of individual programmers and commercial companies engaged in open source projects is initially startling. This paper makes a preliminary exploration of the economics of open source software. We highlight the extent to which labor economics, especially the literature on `career concerns', and industrial organization theory can explain many of these projects' features. We conclude by listing interesting research questions related to open source software.}
}

@article{Lerner2005,
  title = {The {{Scope}} of {{Open Source Licensing}}},
  author = {Lerner, Josh and Tirole, Jean},
  year = {2005},
  journal = {The Journal of Law, Economics, and Organization},
  volume = {21},
  number = {1},
  pages = {20--56},
  doi = {10.1093/jleo/ewi002},
  abstract = {This article is an initial exploration of the determinants of open source license choice. It first highlights how the decision is shaped not just by the preferences of the licensor itself, but also by that of the community of developers. The article then presents an empirical analysis of the determinants of license choice using the SourceForge database, a compilation of nearly 40,000 open source projects. Projects geared toward end-users tend to have restrictive licenses, while those oriented toward developers are less likely to do so. Projects that are designed to run on commercial operating systems and whose primary language is English are less likely to have restrictive licenses. Projects that are likely to be attractive to consumers\textemdash such as games\textemdash and software developed in a corporate setting are more likely to have restrictive licenses. Projects with unrestricted licenses attract more contributors. These findings are broadly consistent with theoretical predictions.}
}

@article{Lindberg2016,
  title = {Coordinating {{Interdependencies}} in {{Online Communities}}: {{A Study}} of an {{Open Source Software Project}}},
  author = {Lindberg, Aron and Berente, Nicholas and Gaskin, James and Lyytinen, Kalle},
  year = {2016},
  journal = {Information Systems Research},
  volume = {27},
  number = {4},
  pages = {751--772},
  doi = {10.1287/isre.2016.0673},
  abstract = {To manage work interdependencies, online communities draw on a variety of arm's length coordination mechanisms offered by information technology platforms and associated practices. However, ``unresolved interdependencies'' remain that cannot be addressed by such arm's length mechanisms. These interdependencies reflect, for example, unidentified or emerging knowledge-based dependencies between the community members or unaccounted relationships between ongoing community tasks. At the same time, online communities cannot resort to hierarchical coordination mechanisms such as incentives or command structures to address such interdependencies. So, how do they manage such interdependencies? To address this question, we conduct an exploratory, theory-generating case study involving qualitative and computational analyses of development activities within an open source software community: Rubinius. We analyze the ongoing management of interdependencies within the community and find that unresolved interdependencies are associated with alternatively structured sequences of activities, which we define as routines. In particular, we observe that two distinct classes of interdependencies\textemdash development and developer interdependencies\textemdash are associated with alternative forms of routine variation. We identify two generalized routine components\textemdash direct implementation and knowledge integration, which address these two distinct classes of unresolved interdependencies. In particular, direct implementation deals with development interdependencies within the code that are not already coordinated through modular interfaces, while knowledge integration resolves unaccounted interdependencies between developers. We conclude with implications for research into organizing principles for online communities and note the significance of our findings for the study of coordination in organization studies in general.}
}

@article{Lospinoso2011,
  title = {Assessing and Accounting for Time Heterogeneity in Stochastic Actor Oriented Models},
  author = {Lospinoso, Joshua A. and Schweinberger, Michael and Snijders, Tom A. B. and Ripley, Ruth M.},
  year = {2011},
  journal = {Advances in Data Analysis and Classification},
  volume = {5},
  pages = {147--176},
  doi = {10.1007/s11634-010-0076-1},
  abstract = {This paper explores time heterogeneity in stochastic actor oriented models (SAOM) proposed by Snijders (Sociological methodology. Blackwell, Boston, pp 361\textendash 395, 2001) which are meant to study the evolution of networks. SAOMs model social networks as directed graphs with nodes representing people, organizations, etc., and dichotomous relations representing underlying relationships of friendship, advice, etc. We illustrate several reasons why heterogeneity should be statistically tested and provide a fast, convenient method for assessment and model correction. SAOMs provide a flexible framework for network dynamics which allow a researcher to test selection, influence, behavioral, and structural properties in network data over time. We show how the forward-selecting, score type test proposed by Schweinberger (Chapter 4: Statistical modeling of network panel data: goodness of fit. PhD thesis, University of Groningen 2007) can be employed to quickly assess heterogeneity at almost no additional computational cost. One step estimates are used to assess the magnitude of the heterogeneity. Simulation studies are conducted to support the validity of this approach. The ASSIST dataset (Campbell et al. In Lancet 371(9624):1595\textendash 1602, 2008) is reanalyzed with the score type test, one step estimators, and a full estimation for illustration. These tools are implemented in the RSiena package, and a brief walkthrough is provided.}
}

@article{Lospinoso2019,
  title = {Goodness of Fit for Stochastic Actor-Oriented Models},
  author = {Lospinoso, Josh and Snijders, Tom A. B.},
  year = {2019},
  journal = {Methodological Innovations},
  volume = {12},
  number = {3},
  doi = {10.1177/2059799119884282},
  abstract = {We propose a Mahalanobis distance\textendash based Monte Carlo goodness of fit testing procedure for the family of stochastic actor-oriented models for social network evolution. A modified model distance estimator is proposed to help the researcher identify model extensions that will remediate poor fit. A limited simulation study is provided to establish baseline legitimacy for the Mahalanobis distance\textendash based Monte Carlo test and modified model distance estimator. A forward model selection workflow is proposed, and this procedure is demonstrated on a real data set.}
}

@incollection{Marsden2005,
  title = {Recent {{Developments}} in {{Network Measurement}}},
  booktitle = {Models and {{Methods}} in {{Social Network Analysis}}},
  author = {Marsden, Peter V.},
  editor = {Carrington, Peter J. and Scott, John and Wasserman, Stanley},
  year = {2005},
  series = {Structural {{Analysis}} in the {{Social Sciences}}},
  number = {27},
  pages = {8--30},
  publisher = {{Cambridge University Press}},
  address = {{New York}}
}

@article{Mockus2002,
  title = {Two Case Studies of Open Source Software Development: {{Apache}} and {{Mozilla}}},
  author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D.},
  year = {2002},
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {11},
  number = {3},
  pages = {309--346},
  doi = {10.1145/567793.567795},
  abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine data from two major open source projects, the Apache web server and the Mozilla browser. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution intervals for these OSS projects. We develop several hypotheses by comparing the Apache project with several commercial projects. We then test and refine several of these hypotheses, based on an analysis of Mozilla data. We conclude with thoughts about the prospects for high-performance commercial/open source process hybrids.}
}

@article{Oh2007,
  title = {Membership {{Herding}} and {{Network Stability}} in the {{Open Source Community}}: {{The Ising Perspective}}},
  author = {Oh, Wonseok and Jeon, Sangyong},
  year = {2007},
  journal = {Management Science},
  volume = {53},
  number = {7},
  pages = {1086--1101},
  doi = {10.1287/mnsc.1060.0623},
  abstract = {The aim of this paper is twofold: (1) to conceptually understand membership dynamics in the open source software (OSS) community, and (2) to explore how different network characteristics (i.e., network size and connectivity) influence the stability of an OSS network. Through the lens of Ising theory, which is widely accepted in physics, we investigate basic patterns of interaction and present fresh conceptual insight into dynamic and reciprocal relations among OSS community members. We also perform computer simulations based on empirical data collected from two actual OSS communities. Key findings include: (1) membership herding is highly present when external influences (e.g., the availability of other OSS projects) are weak, but decreases significantly when external influences increase, (2) propensity for membership herding is most likely to be seen in a large network with random connectivity, and (3) for large networks, when external influences are weak, random connectivity will result in higher network strength than scale-free connectivity (as external influences increase, however, the reverse phenomenon is observed). In addition, scale-free connectivity appears to be less volatile than random connectivity in response to an increase in the strength of external influences. We conclude with several implications that may be of significance to OSS stakeholders in particular, and to a broader range of online communities in general.}
}

@misc{Ripley2021,
  title = {Manual for {{RSiena}}},
  author = {Ripley, Ruth M. and Snijders, Tom A. B. and Boda, Zs{\'o}fia and V{\"o}r{\"o}s, Andras and Preciado, Paulina},
  year = {2022},
  publisher = {{University of Oxford, Department of Statistics; Nuffield College}},
  abstract = {SIENA (for Simulation Investigation for Empirical Network Analysis) is a computer program that carries out the statistical estimation of models for the evolution of social networks according to the dynamic actor-oriented model of Snijders (2001, 2005), Snijders et al. (2007), Snijders et al. (2010a), and Koskinen and Snijders (2022). This is the manual for RSiena, a contributed package to the statistical system R. It comple- ments, but does not replace the help pages for the RSiena functions! It also contains contributions written by Mark Huisman, Michael Schweinberger, and Christian Steglich. This manual is frequently updated, mostly only in a minor way. This version was renewed for RSiena version 1.3.10.}
}

@article{Roberts2006,
  title = {Understanding the {{Motivations}}, {{Participation}}, and {{Performance}} of {{Open Source Software Developers}}: {{A Longitudinal Study}} of the {{Apache Projects}}},
  author = {Roberts, Jeffrey A. and Hann, Il-Horn and Slaughter, Sandra A.},
  year = {2006},
  journal = {Management Science},
  volume = {52},
  number = {7},
  pages = {984--999},
  doi = {10.1287/mnsc.1060.0554},
  abstract = {Understanding what motivates participation is a central theme in the research on open source software (OSS) development. Our study contributes by revealing how the different motivations of OSS developers are interrelated, how these motivations influence participation leading to performance, and how past performance influences subsequent motivations. Drawing on theories of intrinsic and extrinsic motivation, we develop a theoretical model relating the motivations, participation, and performance of OSS developers. We evaluate our model using survey and archival data collected from a longitudinal field study of software developers in the Apache projects. Our results reveal several important findings. First, we find that developers' motivations are not independent but rather are related in complex ways. Being paid to contribute to Apache projects is positively related to developers' status motivations but negatively related to their use-value motivations. Perhaps surprisingly, we find no evidence of diminished intrinsic motivation in the presence of extrinsic motivations; rather, status motivations enhance intrinsic motivations. Second, we find that different motivations have an impact on participation in different ways. Developers' paid participation and status motivations lead to above-average contribution levels, but use-value motivations lead to below-average contribution levels, and intrinsic motivations do not significantly impact average contribution levels. Third, we find that developers' contribution levels positively impact their performance rankings. Finally, our results suggest that past-performance rankings enhance developers' subsequent status motivations.}
}

@article{Robins2004,
  title = {Small {{Worlds Among Interlocking Directors}}: {{Network Structure}} and {{Distance}} in {{Bipartite Graphs}}},
  author = {Robins, Garry and Alexander, Malcolm},
  year = {2004},
  journal = {Computational \& Mathematical Organization Theory},
  volume = {10},
  number = {1},
  pages = {69--94},
  doi = {10.1023/B:CMOT.0000032580.12184.c0},
  abstract = {We describe a methodology to examine bipartite relational data structures as exemplified in networks of corporate interlocking. These structures can be represented as bipartite graphs of directors and companies, but direct comparison of empirical datasets is often problematic because graphs have different numbers of nodes and different densities. We compare empirical bipartite graphs to simulated random graph distributions conditional on constraints implicit in the observed datasets. We examine bipartite graphs directly, rather than simply converting them to two 1-mode graphs, allowing investigation of bipartite statistics important to connection redundancy and bipartite connectivity. We introduce a new bipartite clustering coefficient that measures tendencies for localized bipartite cycles. This coefficient can be interpreted as an indicator of inter-company and inter-director closeness; but high levels of bipartite clustering have a cost for long range connectivity. We also investigate degree distributions, path lengths, and counts of localized subgraphs. Using this new approach, we compare global structural properties of US and Australian interlocking company directors. By comparing observed statistics against those from the simulations, we assess how the observed graphs are structured, and make comparisons between them relative to the simulated graph distributions. We conclude that the two networks share many similarities and some differences. Notably, both structures tend to be influenced by the clustering of directors on boards, more than by the accumulation of board seats by individual directors; that shared multiple board memberships (multiple interlocks) are an important feature of both infrastructures, detracting from global connectivity (but more so in the Australian case); and that company structural power may be relatively more diffuse in the US structure than in Australia.}
}

@article{Schweinberger2012,
  title = {Statistical Modelling of Network Panel Data: {{Goodness}} of Fit},
  author = {Schweinberger, Michael},
  year = {2012},
  journal = {British Journal of Mathematical and Statistical Psychology},
  volume = {65},
  number = {2},
  pages = {263--281},
  doi = {10.1111/j.2044-8317.2011.02022.x},
  abstract = {Networks of relationships between individuals influence individual and collective outcomes and are therefore of interest in social psychology, sociology, the health sciences, and other fields. We consider network panel data, a common form of longitudinal network data. In the framework of estimating functions, which includes the method of moments as well as the method of maximum likelihood, we propose score-type tests. The score-type tests share with other score-type tests, including the classic goodness-of-fit test of Pearson, the property that the score-type tests are based on comparing the observed value of a function of the data to values predicted by a model. The score-type tests are most useful in forward model selection and as tests of homogeneity assumptions, and possess substantial computational advantages. We derive one-step estimators which are useful as starting values of parameters in forward model selection and therefore complement the usefulness of the score-type tests. The finite-sample behaviour of the score-type tests is studied by Monte Carlo simulation and compared to t-type tests.}
}

@article{Setia2012,
  title = {How {{Peripheral Developers Contribute}} to {{Open-Source Software Development}}},
  author = {Setia, Pankaj and Rajagopalan, Balaji and Sambamurthy, Vallabh and Calantone, Roger},
  year = {2012},
  journal = {Information Systems Research},
  volume = {23},
  number = {1},
  pages = {144--163},
  doi = {10.1287/isre.1100.0311}
}

@article{Shah2006,
  title = {Motivation, {{Governance}}, and the {{Viability}} of {{Hybrid Forms}} in {{Open Source Software Development}}},
  author = {Shah, Sonali K.},
  year = {2006},
  journal = {Management Science},
  volume = {52},
  number = {7},
  pages = {1000--1014},
  doi = {10.1287/mnsc.1060.0553},
  abstract = {Open source software projects rely on the voluntary efforts of thousands of software developers, yet we know little about why developers choose to participate in this collective development process. This paper inductively derives a framework for understanding participation from the perspective of the individual software developer based on data from two software communities with different governance structures. In both communities, a need for software-related improvements drives initial participation. The majority of participants leave the community once their needs are met, however, a small subset remains involved. For this set of developers, motives evolve over time and participation becomes a hobby. These hobbyists are critical to the long-term viability of the software code: They take on tasks that might otherwise go undone and work to maintain the simplicity and modularity of the code. Governance structures affect this evolution of motives. Implications for firms interested in implementing hybrid strategies designed to combine the advantages of open source software development with proprietary ownership and control are discussed.}
}

@article{Snijders1996,
  title = {Stochastic Actor-Oriented Models for Network Change},
  author = {Snijders, Tom A. B.},
  year = {1996},
  journal = {The Journal of Mathematical Sociology},
  volume = {21},
  number = {1-2},
  pages = {149--172},
  doi = {10.1080/0022250X.1996.9990178},
  abstract = {A class of models is proposed for longitudinal network data. These models are along the lines of methodological individualism: actors use heuristics to try to achieve their individual goals, subject to constraints. The current network structure is among these constraints. The models are continuous time Markov chain models that can be implemented as simulation models. They incorporate random change in addition to the purposeful change that follows from the actors' pursuit of their goals, and include parameters that must be estimated from observed data. Statistical methods are proposed for estimating and testing these models. These methods can also be used for parameter estimation for other simulation models. The statistical procedures are based on the method of moments, and use computer simulation to estimate the theoretical moments. The Robbins-Monro process is used to deal with the stochastic nature of the estimated theoretical moments. An example is given for Newcomb's fraternity data, using a model that expresses reciprocity and balance.}
}

@article{Snijders2001,
  title = {The {{Statistical Evaluation}} of {{Social Network Dynamics}}},
  author = {Snijders, Tom A. B.},
  year = {2001},
  journal = {Sociological Methodology},
  volume = {31},
  number = {1},
  pages = {361--395},
  doi = {10.1111/0081-1750.00099},
  abstract = {A class of statistical models is proposed for longitudinal network data. The dependent variable is the changing (or evolving) relation network, represented by two or more observations of a directed graph with a fixed set of actors. The network evolution is modeled as the consequence of the actors making new choices, or withdrawing existing choices, on the basis of functions, with fixed and random components, that the actors try to maximize. Individual and dyadic exogenous variables can be used as covariates. The change in the network is modeled as the stochastic result of network effects (reciprocity, transitivity, etc.) and these covariates. The existing network structure is a dynamic constraint for the evolution of the structure itself. The models are continuous-time Markov chain models that can be implemented as simulation models. The model parameters are estimated from observed data. For estimating and testing these models, statistical procedures are proposed that are based on the method of moments. The statistical procedures are implemented using a stochastic approximation algorithm based on computer simulations of the network evolution process.}
}

@incollection{Snijders2005,
  title = {Models for {{Longitudinal Network Data}}},
  booktitle = {Models and {{Methods}} in {{Social Network Analysis}}},
  author = {Snijders, Tom A. B.},
  editor = {Carrington, Peter J. and Scott, John and Wasserman, Stanley},
  year = {2005},
  series = {Structural {{Analysis}} in the {{Social Sciences}}},
  number = {27},
  pages = {215--247},
  publisher = {{Cambridge University Press}},
  address = {{New York}}
}

@article{Snijders2010,
  title = {Introduction to Stochastic Actor-Based Models for Network Dynamics},
  author = {Snijders, Tom A. B. and {van de Bunt}, Gerhard G. and Steglich, Christian E. G.},
  year = {2010},
  journal = {Social Networks},
  volume = {32},
  number = {1},
  pages = {44--60},
  doi = {10.1016/j.socnet.2009.02.004},
  abstract = {Stochastic actor-based models are models for network dynamics that can represent a wide variety of influences on network change, and allow to estimate parameters expressing such influences, and test corresponding hypotheses. The nodes in the network represent social actors, and the collection of ties represents a social relation. The assumptions posit that the network evolves as a stochastic process `driven by the actors', i.e., the model lends itself especially for representing theories about how actors change their outgoing ties. The probabilities of tie changes are in part endogenously determined, i.e., as a function of the current network structure itself, and in part exogenously, as a function of characteristics of the nodes (`actor covariates') and of characteristics of pairs of nodes (`dyadic covariates'). In an extended form, stochastic actor-based models can be used to analyze longitudinal data on social networks jointly with changing attributes of the actors: dynamics of networks and behavior. This paper gives an introduction to stochastic actor-based models for dynamics of directed networks, using only a minimum of mathematics. The focus is on understanding the basic principles of the model, understanding the results, and on sensible rules for model selection.}
}

@article{Sojer2010,
  title = {Code {{Reuse}} in {{Open Source Software Development}}: {{Quantitative Evidence}}, {{Drivers}}, and {{Impediments}}},
  author = {Sojer, Manuel and Henkel, Joachim},
  year = {2010},
  journal = {Journal of the Association for Information Systems},
  volume = {11},
  number = {12},
  pages = {868--901},
  doi = {10.17705/1jais.00248},
  abstract = {The focus of existing open source software (OSS) research has been on how and why individuals and firms add to the commons of public OSS code\textemdash that is, on the ``giving'' side of this open innovation process. In contrast, research on the corresponding ``receiving'' side of the innovation process is scarce. We address this gap, studying how existing OSS code is reused and serves as an input to further OSS development. Our findings are based on a survey with 686 responses from OSS developers. As the most interesting results, our multivariate analyses of developers' code reuse behavior point out that developers with larger personal networks within the OSS community and those who have experience in a greater number of OSS projects reuse more, presumably because both network size and a broad project experience facilitate local search for reusable artifacts. Moreover, we find that a development paradigm that calls for releasing an initial functioning version of the software early\textemdash as the ``credible promise'' in OSS\textemdash leads to increased reuse. Finally, we identify developers' interest in tackling difficult technical challenges as detrimental to efficient reuse-based innovation. Beyond OSS, we discuss the relevance of our findings for companies developing software and for the receiving side of open innovation processes, in general.}
}

@article{Stewart2006a,
  title = {Impacts of {{License Choice}} and {{Organizational Sponsorship}} on {{User Interest}} and {{Development Activity}} in {{Open Source Software Projects}}},
  author = {Stewart, Katherine J. and Ammeter, Anthony P. and Maruping, Likoebe M.},
  year = {2006},
  journal = {Information Systems Research},
  volume = {17},
  number = {2},
  pages = {126--144},
  doi = {10.1287/isre.1060.0082},
  abstract = {What differentiates successful from unsuccessful open source software projects? This paper develops and tests a model of the impacts of license restrictiveness and organizational sponsorship on two indicators of success: user interest in, and development activity on, open source software development projects. Using data gathered from Freshmeat.net and project home pages, the main conclusions derived from the analysis are that (1) license restrictiveness and organizational sponsorship interact to influence user perceptions of the likely utility of open source software in such a way that users are most attracted to projects that are sponsored by nonmarket organizations and that employ nonrestrictive licenses, and (2) licensing and sponsorship address complementary developer motivations such that the influence of licensing on development activity depends on what kind of organizational sponsor a project has. Theoretical and practical implications are discussed, and the paper outlines several avenues for future research.}
}

@article{Subramaniam2009,
  title = {Determinants of Open Source Software Project Success: {{A}} Longitudinal Study},
  author = {Subramaniam, Chandrasekar and Sen, Ravi and Nelson, Matthew L.},
  year = {2009},
  journal = {Decision Support Systems},
  volume = {46},
  number = {2},
  pages = {576--585},
  doi = {10.1016/j.dss.2008.10.005},
  abstract = {In this paper, we investigate open source software (OSS) success using longitudinal data on OSS projects. We find that restrictive OSS licenses have an adverse impact on OSS success. On further analysis, restrictive OSS license is found to be negatively associated with developer interest, but is positively associated with the interest of non-developer users and project administrators. We also show that developer and non-developer interest in the OSS project and the project activity levels in any time period significantly affect the project success measures in subsequent time period. The implications of our findings for OSS research and practice are discussed.}
}

@article{Tang2020,
  title = {More {{Is Not Necessarily Better}}: {{An Absorptive Capacity Perspective}} on {{Network Effects}} in {{Open Source Software Development Communities}}},
  author = {Tang, Tanya (Ya) and Fang, Eric (Er) and Qualls, William J.},
  year = {2020},
  journal = {MIS Quarterly},
  volume = {44},
  number = {4},
  pages = {1651--1678},
  doi = {10.25300/MISQ/2020/13991},
  abstract = {Previous research has predominantly taken a social network perspective suggesting that building more network connections or becoming deeply embedded in a network provides a better position to access network knowledge in open source software communities.This perspective implicitly assumes that accessed network knowledge automatically gets absorbed and transferred to projects, so that building more and deeper network connections is beneficial: Drawing from an absorptive capacity perspective, this research challenges such conventional wisdom, arguing instead that the benefits depend on a project's absorptive capacity. Network connections provide access to external knowledge in the community; the absorption and transfer of this new knowledge require appropriate internal knowledge and developer roles. With longitudinal data collected from 4,518 open source software development projects hosted at SourceForge, the authors show that knowledge breadth (depth) helps with the absorption of external knowledge achieved from network depth (breadth), but it inhibits the absorption of external knowledge obtained from network breadth (depth). Further, developer roles (e.g., bridge members, role diversity) can mitigate the negative consequences of suboptimal combinations and facilitate effective transfers of absorbed external knowledge across and within projects. These findings provide important theoretical and managerial implications for managing network connections, knowledge, and developer roles in open source software communities.}
}

@inproceedings{Valiev2018,
  title = {Ecosystem-{{Level Determinants}} of {{Sustained Activity}} in {{Open-Source Projects}}: {{A Case Study}} of the {{PyPI Ecosystem}}},
  booktitle = {Proceedings of the 26th {{ACM Joint Meeting}} on {{European Software Engineering Conference}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}},
  author = {Valiev, Marat and Vasilescu, Bogdan and Herbsleb, James},
  year = {2018},
  pages = {644--655},
  address = {{Lake Buena Vista, FL, USA}},
  doi = {10.1145/3236024.3236062}
}

@article{vonHippel2003,
  title = {Open {{Source Software}} and the ``{{Private-Collective}}'' {{Innovation Model}}: {{Issues}} for {{Organization Science}}},
  author = {{von Hippel}, Eric and {von Krogh}, Georg},
  year = {2003},
  journal = {Organization Science},
  volume = {14},
  number = {2},
  pages = {209--223},
  doi = {10.1287/orsc.14.2.209.14992},
  abstract = {Currently, two models of innovation are prevalent in organization science. The ``private investment'' model assumes returns to the innovator result from private goods and efficient regimes of intellectual property protection. The ``collective action'' model assumes that under conditions of market failure, innovators collaborate in order to produce a public good. The phenomenon of open source software development shows that users program to solve their own as well as shared technical problems, and freely reveal their innovations without appropriating private returns from selling the software. In this paper, we propose that open source software development is an exemplar of a compound ``private-collective'' model of innovation that contains elements of both the private investment and the collective action models and can offer society the ``best of both worlds'' under many conditions. We describe a new set of research questions this model raises for scholars in organization science. We offer some details regarding the types of data available for open source projects in order to ease access for researchers who are unfamiliar with these, and also offer some advice on conducting empirical studies on open source software development processes.}
}

@article{vonKrogh2003,
  title = {Community, Joining, and Specialization in Open Source Software Innovation: A Case Study},
  author = {{von Krogh}, Georg and Spaeth, Sebastian and Lakhani, Karim R.},
  year = {2003},
  journal = {Research Policy},
  volume = {32},
  number = {7},
  pages = {1217--1241},
  doi = {10.1016/S0048-7333(03)00050-7},
  abstract = {This paper develops an inductive theory of the open source software (OSS) innovation process by focussing on the creation of Freenet, a project aimed at developing a decentralized and anonymous peer-to-peer electronic file sharing network. We are particularly interested in the strategies and processes by which new people join the existing community of software developers, and how they initially contribute code. Analyzing data from multiple sources on the Freenet software development process, we generate the constructs of ``joining script'', ``specialization'', ``contribution barriers'', and ``feature gifts'', and propose relationships among these. Implications for theory and research are discussed.}
}

@article{vonKrogh2012,
  title = {Carrots and {{Rainbows}}: {{Motivation}} and {{Social Practice}} in {{Open Source Software Development}}},
  author = {{von Krogh}, Georg and Haefliger, Stefan and Spaeth, Sebastian and Wallin, Martin W.},
  year = {2012},
  journal = {MIS Quarterly},
  volume = {36},
  number = {2},
  pages = {649--676},
  abstract = {Open source software (OSS) is a social and economic phenomenon that raises fundamental questions about the motivations of contributors to information systems development. Some developers are unpaid volunteers who seek to solve their own technical problems, while others create OSS as part of their employment contract. For the past 10 years, a substantial amount of academic work has theorized about and empirically examined developer motivations. We review this work and suggest considering motivation in terms of the values of the social practice in which developers participate. Based on the social philosophy of Alasdair MacIntyre, we construct a theoretical framework that expands our assumptions about individual motivation to include the idea of a long-term, value-informed quest beyond short-term rewards. This motivation\textendash practice framework depicts how the social practice and its supporting institutions mediate between individual motivation and outcome. The framework contains three theoretical conjectures that seek to explain how collectively elaborated standards of excellence prompt developers to produce high-quality software, change institutions, and sustain OSS development. From the framework, we derive six concrete propositions and suggest a new research agenda on motivation in OSS.}
}


